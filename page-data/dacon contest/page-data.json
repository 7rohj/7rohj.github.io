{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/dacon contest/",
    "result": {"data":{"cur":{"id":"985605f4-cf31-5284-a101-993083c3ce7c","html":"<br/>\r\n오! 데이콘에서 실시한 대회에서 2분동안 3등을 했었다. (600명 조금 넘는 참가자 중에서!)<br/>\r\n영광의 캡쳐 .... ✨\n<h3 id=\"2분간-3등png-\" style=\"position:relative;\"><a href=\"#2%EB%B6%84%EA%B0%84-3%EB%93%B1png-\" aria-label=\"2분간 3등png  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2분간 3등.png ^.^</h3>\n<p><img src=\"https://github.com/7rohj/7rohj.github.io/blob/2aed1e1cc54c249b0a06c928209354c821392d43/content/dacon%20contest/2%EB%B6%84%EA%B0%843%EB%93%B1.png?raw=true\" alt=\"picture\"></p>\n<blockquote>\n<p>오잉 내가 내 이름까지 가려버렸네</p>\n</blockquote>\n<p>최종 결과는 public 10등/private 22등을 했다 :)<br/>\r\n정말 신기하고 재미있는 경험이였다 ㅎㅎㅎㅎㅎㅎ<br/>\r\n이번 <code class=\"language-text\">전복 나이 예측 경진대회</code>를 진행하면서 많이 배우고 가는 것 같다. <br/></p>\n<p>이번 경진대회를 통해 새로 알게 된건 <code class=\"language-text\">Auto ML</code> 이다.\r\n이게 <strong>pycaret 라이브러리</strong>를 통해 머신러닝을 이용하는 것인데, 하이퍼파라미터만 내가 수정하면 되는거라\r\n손이 별로 안가고 무척 편리했다! <br/> 내가 어떤 모델을 이용해서 진행할 것인지 처음 선택할 때 도움이 많이 되었다.<br/>\r\n(마지막에는 pycaret을 이용하진 않았지만 ^^…)</p>\n<h2 id=\"아무튼-코드-설명-시작-\" style=\"position:relative;\"><a href=\"#%EC%95%84%EB%AC%B4%ED%8A%BC-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85-%EC%8B%9C%EC%9E%91-\" aria-label=\"아무튼 코드 설명 시작  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아무튼 코드 설명 시작 ~~!</h2>\n<h3 id=\"데이터-탐색\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%90%EC%83%89\" aria-label=\"데이터 탐색 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 탐색</h3>\n<p><img src=\"https://github.com/7rohj/7rohj.github.io/blob/2aed1e1cc54c249b0a06c928209354c821392d43/content/dacon%20contest/images1.PNG?raw=true\" alt=\"picture\"></p>\n<p><code class=\"language-text\">train data set</code>은 id, Gender, Lenght, Diameter, Height, Whole Weight, Shucked Weight, Viscra Weight, Shell Weight, Target의 칼럼을 갖고 있고\r\n<code class=\"language-text\">test data set</code>은 Target을 제외한 나머지 칼럼들을 갖고 있다. shape은 (1253, 10) 그리고 (2924, 9) 로 test data가 더 많은 row를 갖고 있는 양상을 보여줬다.</p>\n<br/>\n<p><img src=\"https://github.com/7rohj/7rohj.github.io/blob/2aed1e1cc54c249b0a06c928209354c821392d43/content/dacon%20contest/images2.PNG?raw=true\" alt=\"picture\"></p>\n<p>범주형 칼럼인 <code class=\"language-text\">Gender 칼럼</code>을 <code class=\"language-text\">value_counts</code> 를 통해 얼마나 어떻게 분포 되어 있는지 확인했다.\r\ntrain이나 test에서 M이 다른 I과 F 보다 약 5퍼센트 포인트 더 많았다.</p>\n<br/>\n<p><img src=\"https://github.com/7rohj/7rohj.github.io/blob/2aed1e1cc54c249b0a06c928209354c821392d43/content/dacon%20contest/images3.PNG?raw=true\" alt=\"picture\"></p>\n<p>다행히 null 값은 없었다 ㅎㅎ</p>","excerpt":"2분간 3등.png ^.^ picture 오잉 내가 내 이름까지 가려버렸네 최종 결과는 public 10등/private 22등을 했다 :)\r\n정말 신기하고 재미있는 경험이였다 ㅎㅎㅎㅎㅎㅎ\r\n이번 를 진행하면서 많이 배우고 가는 것 같다.  이번 경진대회를 통해 새로 알게 된건  이다.\r\n이게 pycaret 라이브러리를 통해 머신러닝을 이용하는 것인데, 하이퍼파라미터만 내가 수정하면 되는거라\r\n손이 별로 안가고 무척 편리했다!  내가 어떤 모델을 이용해서 진행할 것인지 처음 선택할 때 도움이 많이 되었다.\r\n(마지막에는 pycaret을 이용하진 않았지만 ^^…) 아무튼 코드 설명 시작 ~~! 데이터 탐색 picture 은 id, Gender, Lenght, Diameter, Height, Whole Weight, Shucked Weight, Viscra Weight, Shell Weight, Target의 칼럼을 갖고 있고\r\n은 Target을 제외한 나머지 칼럼들을 갖고 있다. s…","frontmatter":{"date":"April 09, 2022","title":"전복 나이 예측 경진대회","categories":"🤍데이콘🤍","author":"강화정","emoji":"🎢"},"fields":{"slug":"/dacon contest/"}},"next":{"id":"f1b7929b-2c8d-5222-8444-e11046ccb065","html":"<p>일단 null 값이 있는 row는 drop 해주고,\r\n회귀 모델을 적용하기 전에 타깃 값의 분포도가 정규 분포인지 확인한다. (drop 말고도 다양한 방법이 있음. 다음에 다뤄보도록 해보자)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> warnings\r\nwarnings.filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token function\">import</span> pandas as pd\r\n<span class=\"token function\">import</span> numpy as np\r\n<span class=\"token function\">import</span> seaborn as sns\r\n<span class=\"token function\">import</span> matplotlib.pyplot as plt\r\n%matplotlib inline\r\n\r\nhouse_df_org <span class=\"token operator\">=</span> pd.read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'house_price.csv'</span><span class=\"token punctuation\">)</span>\r\nhouse_df <span class=\"token operator\">=</span> house_df_org.copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 같은 데이터 프레임 복사.</span>\r\nhouse_df.head<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">print<span class=\"token punctuation\">(</span><span class=\"token string\">'데이터 세트의 Shape:'</span>, house_df.shape<span class=\"token punctuation\">)</span>\r\nprint<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n전체 피처의 type \\n'</span>, house_df.dtypes.value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\r\n<span class=\"token assign-left variable\">isnull_series</span><span class=\"token operator\">=</span>house_df.isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.sum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nprint<span class=\"token punctuation\">(</span><span class=\"token string\">'\\nNull 칼럼과 그 건수:\\n'</span>, isnull_series<span class=\"token punctuation\">[</span>isnull_series<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span>False<span class=\"token punctuation\">))</span></code></pre></div>\n<p>결과는 생략 <code class=\"language-text\">o.~</code></p>\n<br/>\r\n<br/>\n<p>회귀 모델을 적용하기 잔에 타깃 값의 분포도가 정규 분포인지 확인해야 한다.\r\n위 데이터는 데이터 값의 분포가 중심에서 왼쪽으로 치우친 형태로 정규 분포에서 벗어나 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">plt.title<span class=\"token punctuation\">(</span><span class=\"token string\">'Original Sale Price Histogram'</span><span class=\"token punctuation\">)</span>\r\nsns.distplot<span class=\"token punctuation\">(</span>trainDF<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\r\n<br/>\n<h3 id=\"point\" style=\"position:relative;\"><a href=\"#point\" aria-label=\"point permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>POINT</h3>\n<p><code class=\"language-text\">정규 분포가 아닌 결과값</code>을 정규 분포 형태로 변환하기 위해 <code class=\"language-text\">로그 변환(Log Transformation)</code>을 적용한다.\r\n<strong>넘파이의 <code class=\"language-text\">log1p()</code>를 이용해 로그 변환한 결괏값을 기반으로 학습한 뒤, 예측 시에는 다시 결괏값을 <code class=\"language-text\">expm1()</code>으로 추후에 환원</strong>하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">plt.title<span class=\"token punctuation\">(</span><span class=\"token string\">'Log Transformed Sale Price Histogram'</span><span class=\"token punctuation\">)</span>\r\nlog_SalePrice <span class=\"token operator\">=</span> np.log1p<span class=\"token punctuation\">(</span>house_df<span class=\"token punctuation\">[</span><span class=\"token string\">'salePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nsns.distplot<span class=\"token punctuation\">(</span>log_SalePrice<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\r\n<br/>\n<p>그리고 문자형 피처는 <code class=\"language-text\">get_dummies()</code>를 이용해준다. 만약 Gender 라는 칼럼이 있으면 Gender_M, Gender_F 하고 해당되는 부분에 1이라는 값이 주어지는 형태의 테이블로 바뀜\r\n<br/>\r\n<br/>\r\n<br/></p>","frontmatter":{"date":"April 08, 2022","title":"데이터 사전처리(Preprocessing)","categories":"빅분기","author":"강화정","emoji":"🌱"},"fields":{"slug":"/prods 4/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://7rohj.github.io","comments":{"utterances":{"repo":"https://7rohj.github.io"}}}}},"pageContext":{"slug":"/dacon contest/","nextSlug":"/prods 4/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}