{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/prods 2/",
    "result": {"data":{"cur":{"id":"f071711f-d9ff-53cb-8df3-b48f0b8242d5","html":"<p>단순 선형 회귀는 독립변수도 하나, 종속변수도 하나인 선형 회귀이다.\r\n실제 값과 회귀 모델의 차이에 따른 오류 값을 남은 오류, 즉 잔차라고 부르며\r\n<code class=\"language-text\">최적의 회귀 모델을 만든다는 것</code>은 바로 전체 데이터의 <code class=\"language-text\">잔차 합이 최소가 되는 모델을 만든다는 의미</code>이다.\r\n동시에 오류 값 합이 최소가 될 수 있는 최적의 회귀 계수를 찾는다는 의미도 된다.</p>\n<p>보통 오류 합을 계산할 때는 <code class=\"language-text\">절댓값을 취해서 더하거나</code>, <code class=\"language-text\">오류 값의 제곱을 구해서 더하는 방식</code>을 취한다.\r\n앞 Meaen Absolute Error, 뒤 Residual Sum of Square</p>\n<p>즉, Error^2 = RSS 이다.</p>\n<p>RSS는 w0 그리고 w1인 식으로 표현할 수 있으며 이 RSS를 최소로 하는 w0,w1, 즉 회귀 계수를 학습을 통해서\r\n찾는 것이 머신러닝 기반 회귀의 핵심 사항이다.</p>\n<p>RSS는 회귀식의 독립변수, 종속변수가 중심 변수가 아니라 회귀 계수인 w 변수가 중심 변수임을 인지하는 것이 매우 중요하다.\r\n학습 데이터로 입력되는 독립변수와 종속변수는 RSS에서는 모두 상수로 간주한다.</p>\n<p>회귀에서 이 <code class=\"language-text\">RSS</code>는 <code class=\"language-text\">비용(Cost)</code>이며 w변수로 구성되는 RSS를 비용 함수라고 한다.\r\n머신러닝 회귀 알고리즘은 데이터를 계속 학습하면서 이 비용 함수가 반환하는 값을 지속해서 감소시키고 최종적으로는\r\n<code class=\"language-text\">더 이상 감소하지 않는 최소의 오류 값을 구하는 것</code>이다. 비용함수를 손실함수(loss function)라고도 한다.</p>\n<h3 id=\"-비용-최소화하기---경사-하강법-gradient-descent-\" style=\"position:relative;\"><a href=\"#-%EB%B9%84%EC%9A%A9-%EC%B5%9C%EC%86%8C%ED%99%94%ED%95%98%EA%B8%B0---%EA%B2%BD%EC%82%AC-%ED%95%98%EA%B0%95%EB%B2%95-gradient-descent-\" aria-label=\" 비용 최소화하기   경사 하강법 gradient descent  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>※ 비용 최소화하기 - 경사 하강법 (Gradient Descent) ※</h3>\n<p>경사 하강법은 반복적으로 비용 함수의 반환 값 즉 예측값과 실제 값의 차이가 작아지는 방향성을 가지고 W 파라미터를 지속해서 보정해 나간다.\r\n최초 오류 값이 100이었다면 두 번째 오류 값은 100보다 작은 90, 세 번째는 80과 같은 방식으로 지속해서 오류를 감소시키는 방향으로 W 값을 계속 업데이트해 나간다.\r\n그리고 오류 값이 더 이상 작아지지 않으면 그 오류 값을 최소 비용으로 판단하고 그 때의 W 값을 최적 파라미터로 반환한다.</p>\n<p><code class=\"language-text\">경사하강법은 수행 시간이 매우 오래 걸린다</code>는 단점이 있기 때문에 실전에서는 대부분 확률적 경사 하강법을 이용한다.\r\n확률적 경사 하강법은 전체 입력 데이터로 w가 업데이트되는 값을 계산하는 것이 아니라 <strong>일부 데이터만 이용해</strong> w가 업데이트되는 값을 계산하므로\r\n경사 하강법에 비해서 빠른 속도를 보장한다. 따라서 대용량의 데이터의 경우 대부분 <code class=\"language-text\">확률적 경사 하강법</code>이나 <code class=\"language-text\">미니 배치 확률적 경사 하강법</code>을 이용해 최적 비용함수를 도출한다.</p>\n<br/>\r\n<br/>\r\n<br/>","excerpt":"단순 선형 회귀는 독립변수도 하나, 종속변수도 하나인 선형 회귀이다.\r\n실제 값과 회귀 모델의 차이에 따른 오류 값을 남은 오류, 즉 잔차라고 부르며\r\n은 바로 전체 데이터의 이다.\r\n동시에 오류 값 합이 최소가 될 수 있는 최적의 회귀 계수를 찾는다는 의미도 된다. 보통 오류 합을 계산할 때는 , 을 취한다.\r\n앞 Meaen Absolute Error, 뒤 Residual Sum of Square 즉, Error^2 = RSS 이다. RSS는 w0 그리고 w1인 식으로 표현할 수 있으며 이 RSS를 최소로 하는 w0,w1, 즉 회귀 계수를 학습을 통해서\r\n찾는 것이 머신러닝 기반 회귀의 핵심 사항이다. RSS는 회귀식의 독립변수, 종속변수가 중심 변수가 아니라 회귀 계수인 w 변수가 중심 변수임을 인지하는 것이 매우 중요하다.\r\n학습 데이터로 입력되는 독립변수와 종속변수는 RSS에서는 모두 상수로 간주한다. 회귀에서 이 는 이며 w변수로 구성되는 RSS를 비용 함수라고 한다.\r\n…","frontmatter":{"date":"April 05, 2022","title":"선형회귀","categories":"빅분기","author":"강화정","emoji":"🚫"},"fields":{"slug":"/prods 2/"}},"next":{"id":"ba22d9ef-1759-589b-a179-7411e8842509","html":"<p>분석기법에는 우선 지도학습과 비지도학습으로 나뉜다.<br/>\r\n<strong>지도학습</strong>은 <code class=\"language-text\">정답이 있는</code> 데이터를 활용해 데이터를 학습시키는 방법이며<br/>\r\n<strong>비지도학습</strong>은 <code class=\"language-text\">정답 없는</code> 데이터를 컴퓨터 스스로 학습하여 숨겨진 의미, <br/>\r\n패턴을 찾아내고 구조화하는 방법이다.</p>\n<p>종류에는</p>\n<ul>\n<li>\n<p><code class=\"language-text\">지도학습</code> : 크게 분류와 회귀로 나눌 수 있고 분류에는 의사결정트리, 랜덤포레스트, 인공신경망, 서포트벡터머신, 로지스틱 회귀분석이있다. 회귀분석에는 의사결정트리와 선형회귀분석 그리고 다중회귀분석이 있다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">비지도학습</code> : 군집분석, 연관성분석, 인공신경망, 오토인코더 등이 있다.</p>\n</li>\n</ul>\n<p>주로 입력값 또는 원인을 설명하는 변수를 <code class=\"language-text\">독립변수</code> <br/>\r\n그리고 결과값 또는 효과를 설명하는 변수를 <code class=\"language-text\">종속변수</code> 라고 한다.</p>\n<p>다르게 부르는 방법도 있다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">X</th>\n<th align=\"center\">Y</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">독립변수</td>\n<td align=\"center\">종속변수</td>\n</tr>\n<tr>\n<td align=\"center\">설명변수</td>\n<td align=\"center\">반응변수</td>\n</tr>\n<tr>\n<td align=\"center\">보조변수</td>\n<td align=\"center\">연구변수</td>\n</tr>\n<tr>\n<td align=\"center\">특징</td>\n<td align=\"center\">라벨</td>\n</tr>\n<tr>\n<td align=\"center\">입력</td>\n<td align=\"center\">출력,산출,결과</td>\n</tr>\n<tr>\n<td align=\"center\">입력</td>\n<td align=\"center\">목표</td>\n</tr>\n<tr>\n<td align=\"center\">예측변수</td>\n<td align=\"center\">피예측변수</td>\n</tr>\n</tbody>\n</table>\n<p>가 그것이다.</p>\n<br/>\r\n<br/>\r\n<br/>","frontmatter":{"date":"April 05, 2022","title":"빅분기 분석기법","categories":"빅분기","author":"강화정","emoji":"⭕"},"fields":{"slug":"/prods/"}},"prev":{"id":"0c6c31cb-7da4-5200-ac63-3a80673f9346","html":"<p>선형회귀분석의 기본적인 가정이 있다.\r\n<code class=\"language-text\">선형회귀분석을 하기 전에 검토해봐야할 몇 가지 가정.</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">선형성</td>\n<td align=\"left\">독립변수와 종속변수가 선형적이어야 한다.</td>\n</tr>\n<tr>\n<td align=\"center\">잔차 정규성</td>\n<td align=\"left\">잔차의 기댓값은 0이며 정규분포를 이루어야 한다.</td>\n</tr>\n<tr>\n<td align=\"center\">잔차 독립성</td>\n<td align=\"left\">잔차들은 서로 독립적이어야 한다</td>\n</tr>\n<tr>\n<td align=\"center\">잔차 등분산성</td>\n<td align=\"left\">잔차들의 분산이 일정해야 한다.</td>\n</tr>\n<tr>\n<td align=\"center\">다중 공선성(VIF)</td>\n<td align=\"left\">다중 회귀분석을 수행할 경우 3개 이상의 독립변수 간에 상관관계로 인한 문제가 없어야 한다.</td>\n</tr>\n</tbody>\n</table>\n<br/>\r\n<br/>\r\n<br/>\n<p><strong>[아래는 파이썬을 통해 다중공산성 확인 및 변수 제거 실습한 이미지 이다]</strong><br/>\r\n데이터는 <code class=\"language-text\">보스턴 주택 데이터</code><br/></p>\n<h2 id=\"-1-\" style=\"position:relative;\"><a href=\"#-1-\" aria-label=\" 1  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>〰 1 〰</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> pandas as pd \r\n<span class=\"token function\">import</span> numpy as np\r\n<span class=\"token function\">import</span> statsmodels.api as sm\r\n\r\n<span class=\"token comment\"># 데이터 불러오기</span>\r\nboston <span class=\"token operator\">=</span> pd.read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"./Boston_house.csv\"</span><span class=\"token punctuation\">)</span>\r\nboston_data <span class=\"token operator\">=</span> boston.drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Target'</span><span class=\"token punctuation\">]</span>, <span class=\"token assign-left variable\">axis</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># crim, rm, lstat을 통한 다중 선형회귀분석</span>\r\nx_data <span class=\"token operator\">=</span> boston<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"CRIM\"</span>,<span class=\"token string\">\"RM\"</span>,<span class=\"token string\">\"LSTAT\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#변수 여러개</span>\r\ntarget <span class=\"token operator\">=</span> boston<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Target\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token comment\"># for b0, 상수항 추가</span>\r\nx_data1 <span class=\"token operator\">=</span> sm.add_constant<span class=\"token punctuation\">(</span>x_data, has_constant <span class=\"token operator\">=</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># OLS 검정</span>\r\nmulti_model <span class=\"token operator\">=</span> sm.OLS<span class=\"token punctuation\">(</span>target, x_data1<span class=\"token punctuation\">)</span>\r\nfitted_multi_model <span class=\"token operator\">=</span> multi_model.fit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nfitted_multi_model.summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"code-classlanguage-textcrimrmlstatcode-ols-결과\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcrimrmlstatcode-ols-%EA%B2%B0%EA%B3%BC\" aria-label=\"code classlanguage textcrimrmlstatcode ols 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">\"CRIM\",\"RM\",\"LSTAT\"</code> OLS 결과</h3>\n<p><img src=\"https://github.com/7rohj/7rohj.github.io/blob/4b2a9b2c79038944080b02ea7a44705979f6f415/content/prods%202%20-%201/olsresult.png?raw=true\" alt=\"picture\"></p>\n<br/>\r\n<br/>\r\n<br/>\n<h2 id=\"-2-\" style=\"position:relative;\"><a href=\"#-2-\" aria-label=\" 2  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>〰 2 〰</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">## boston data에서 원하는 변수만 뽑아오기</span>\r\nx_data2 <span class=\"token operator\">=</span> boston<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'CRIM'</span>,<span class=\"token string\">'RM'</span>, <span class=\"token string\">'LSTAT'</span>, <span class=\"token string\">'B'</span>, <span class=\"token string\">'TAX'</span>, <span class=\"token string\">'AGE'</span>, <span class=\"token string\">'ZN'</span>, <span class=\"token string\">'NOX'</span>, <span class=\"token string\">'INDUS'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\nx_data2.head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 상수항 추가</span>\r\nx_data2_ <span class=\"token operator\">=</span> sm.add_constant<span class=\"token punctuation\">(</span>x_data2, has_constant <span class=\"token operator\">=</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 회귀모델 적합</span>\r\nmulti_model2 <span class=\"token operator\">=</span> sm.OLS<span class=\"token punctuation\">(</span>target, x_data2_<span class=\"token punctuation\">)</span>\r\nfitted_multi_model2 <span class=\"token operator\">=</span> multi_model2.fit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 결과 출력</span>\r\nfitted_multi_model2.summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"code-classlanguage-textfull-featurescode-ols-결과\" style=\"position:relative;\"><a href=\"#code-classlanguage-textfull-featurescode-ols-%EA%B2%B0%EA%B3%BC\" aria-label=\"code classlanguage textfull featurescode ols 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">FULL FEATURES</code> OLS 결과</h3>\n<p><img src=\"https://github.com/7rohj/7rohj.github.io/blob/7f3956c123d04a5f9b1539c99feefc038c66455e/content/prods%202%20-%201/olsresult2.png?raw=true\" alt=\"picture\"></p>\n<p>*Warnings 에서의 2번 항목이 생겼다. 다중공산성 주의!</p>\n<blockquote>\n<p>강한 다중공선성 또는 다른 numerical 문제가 발생했다고 암시.</p>\n</blockquote>\n<br/>\r\n<br/>\r\n<br/>\n<h2 id=\"-3-\" style=\"position:relative;\"><a href=\"#-3-\" aria-label=\" 3  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>〰 3 〰</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 변수끼리 산점도를 시각화</span>\r\nsns.pairplot<span class=\"token punctuation\">(</span>x_data2<span class=\"token punctuation\">)</span>\r\nplt.show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"code-classlanguage-textsnspairplotcode-결과\" style=\"position:relative;\"><a href=\"#code-classlanguage-textsnspairplotcode-%EA%B2%B0%EA%B3%BC\" aria-label=\"code classlanguage textsnspairplotcode 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">sns.pairplot</code> 결과</h3>\n<p><img src=\"https://github.com/7rohj/7rohj.github.io/blob/7f3956c123d04a5f9b1539c99feefc038c66455e/content/prods%202%20-%201/pairplot.png?raw=true\" alt=\"picture\"></p>\n<p>그림에는 없지만 heatmap을 이용해 상관 matrix를 확인했을때 <code class=\"language-text\">0.5가 넘어가는 변수들간의 상관관계</code>가 빈출되는 것은\r\n충분히 <code class=\"language-text\">다중공선성 발생</code>을 의심할 수 있다. 즉, 그 변수들은 제거해 주는게 이롭다고 판단할 수 있는 것이다.\r\n위 그림에서 보이듯 음 또는 양의 상관관계를 나타내는 그래프들의 변수들 또한 그렇다고 얘기할 수 있다.</p>\n<br/>\r\n<br/>\r\n<br/>\n<h2 id=\"-4-\" style=\"position:relative;\"><a href=\"#-4-\" aria-label=\" 4  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>〰 4 〰</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">from statsmodels.stats.ouliers_influence <span class=\"token function\">import</span> variance_inflation_factor \r\n\r\n<span class=\"token comment\"># VIF사용을 위한 라이브러리, statsmodels안에 존재한다.</span>\r\n<span class=\"token comment\"># 사실 모든 통계기법이 statsmodels 모듈에 존재하여 </span>\r\n<span class=\"token comment\"># 이 중에 필요한 통계기법을 찾아 import를 진행하면 된다.</span>\r\n\r\nvif <span class=\"token operator\">=</span> pd.DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nvif<span class=\"token punctuation\">[</span><span class=\"token string\">\"VIF Factor\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>varinace_inflation_factor<span class=\"token punctuation\">(</span>x_data2.values, i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span>x_data2.shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\nvif<span class=\"token punctuation\">[</span><span class=\"token string\">\"features\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x_data4.columns\r\nvif</code></pre></div>","frontmatter":{"date":"April 05, 2022","title":"선형회귀(2)","categories":"빅분기","author":"강화정","emoji":"🚫"},"fields":{"slug":"/prods 2 - 1/"}},"site":{"siteMetadata":{"siteUrl":"https://7rohj.github.io","comments":{"utterances":{"repo":"https://7rohj.github.io"}}}}},"pageContext":{"slug":"/prods 2/","nextSlug":"/prods/","prevSlug":"/prods 2 - 1/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}